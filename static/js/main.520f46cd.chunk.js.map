{"version":3,"sources":["hooks/useMousePosition.js","modules/board.js","modules/game.js","modules/block.js","hooks/useBlock.js","components/Block.jsx","components/Board.jsx","components/Control.jsx","App.js","reportWebVitals.js","modules/index.js","index.js"],"names":["useMousePosition","useState","x","y","pos","setPos","useEffect","callback","pageX","pageY","document","addEventListener","removeEventListener","INIT_BOARD","SET_BOARD","initBoard","createAction","setBoard","board","initialState","Array","fill","reducer","handleActions","state","payload","START","END","GET_POINT","RESET","isStarted","isOver","score","best","start","end","getPoint","lineCount","reset","Math","max","INIT","MOVE","SET_TOUCH","SET_DIRECTION","init","moveBlock","setTouch","setDirection","direction","row","col","isTouched","nextCol","useBlock","dispatch","useDispatch","useSelector","_","block","mousePos","interval","setInterval","getState","underRow","slice","some","box","clearInterval","nextState","map","line","r","c","filter","every","removedLine","length","addLineCount","baseLine","unshift","rect","getElementById","getBoundingClientRect","left","right","getDirection","Block","absolute_position","top","id","style","className","Board","game","rowIndex","colIndex","isStock","Line","children","Box","backgroundColor","Control","onClick","useCallback","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render"],"mappings":"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","file":"static/js/main.520f46cd.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst useMousePosition = () => {\r\n  const [pos, setPos] = useState({ x: 0, y: 0 });\r\n  useEffect(() => {\r\n    const callback = ({ pageX, pageY }) => setPos({ x: pageX, y: pageY });\r\n    document.addEventListener(\"mousemove\", callback);\r\n    return () => document.removeEventListener(\"mousemove\", callback);\r\n  });\r\n  return [pos];\r\n};\r\n\r\nexport default useMousePosition;\r\n","import { createAction, handleActions } from \"redux-actions\";\r\nimport { getPoint } from \"./game\";\r\n\r\nconst [STOCK, BOX] = [-1, 0];\r\nconst ROW = 20;\r\nconst COL = 10;\r\n\r\nconst INIT_BOARD = \"board/INIT_BOARD\";\r\nconst SET_BOARD = \"board/SET_BOARD\";\r\n\r\nexport const initBoard = createAction(INIT_BOARD);\r\nexport const setBoard = createAction(SET_BOARD, (board) => board);\r\nexport const touchBlock = (pos) => (dispatch, getState) => {\r\n  const { board } = getState();\r\n  const { row, col } = pos;\r\n  const nextState = board\r\n    .map((line, r) => {\r\n      return line.map((box, c) => {\r\n        if (r < row || row + 1 < r) return box;\r\n        if (c < col || col + 1 < c) return box;\r\n        return STOCK;\r\n      });\r\n    })\r\n    .filter((line) => !line.every((box) => box === STOCK));\r\n  const removedLine = ROW - nextState.length;\r\n  let addLineCount = 0;\r\n  while (removedLine > addLineCount++) {\r\n    const baseLine = new Array(COL).fill(BOX);\r\n    nextState.unshift(baseLine);\r\n  }\r\n  dispatch(getPoint(removedLine));\r\n  dispatch(setBoard(nextState));\r\n};\r\n\r\nconst initialState = new Array(ROW).fill(new Array(COL).fill(BOX));\r\n\r\nconst reducer = handleActions(\r\n  {\r\n    [INIT_BOARD]: () => initialState,\r\n    [SET_BOARD]: (state, { payload }) => payload,\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default reducer;\r\n","import { createAction, handleActions } from \"redux-actions\";\r\nimport { initBoard } from \"./board\";\r\n\r\nconst BASE_POINT = 10;\r\n\r\nconst START = \"game/START\";\r\nconst END = \"game/END\";\r\nconst GET_POINT = \"game/GET_POINT\";\r\nconst RESET = \"game/RESET\";\r\n\r\nconst initialState = {\r\n  isStarted: false,\r\n  isOver: false,\r\n  score: 0,\r\n  best: 0,\r\n};\r\nexport const start = createAction(START);\r\nexport const end = createAction(END);\r\nexport const getPoint = createAction(GET_POINT, (lineCount) => lineCount);\r\nexport const reset = createAction(RESET);\r\n\r\nexport const resetGame = () => (dispatch) => {\r\n  dispatch(initBoard());\r\n  dispatch(reset());\r\n};\r\nexport const gameOver = createAction(END);\r\n\r\nconst reducer = handleActions(\r\n  {\r\n    [START]: (state) => ({ ...state, isStarted: true }),\r\n    [END]: (state) => ({ ...state, isOver: true }),\r\n    [GET_POINT]: (state, { payload: lineCount }) => ({\r\n      ...state,\r\n      score: state.score + lineCount * BASE_POINT,\r\n    }),\r\n    [RESET]: (state) => ({\r\n      ...initialState,\r\n      best: Math.max(state.score, state.best),\r\n    }),\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default reducer;\r\n","import { createAction, handleActions } from \"redux-actions\";\r\nimport { end } from \"./game\";\r\n\r\nconst INIT = \"block/INIT\";\r\nconst MOVE = \"block/MOVE\";\r\nconst SET_TOUCH = \"block/SET_TOUCH\";\r\nconst SET_DIRECTION = \"block/SET_DIRECTION\";\r\n\r\nexport const init = createAction(INIT);\r\nexport const moveBlock = createAction(MOVE, (pos) => pos);\r\nexport const setTouch = createAction(SET_TOUCH, (pos) => pos);\r\nexport const checkCrash = () => (dispatch, getState) => {\r\n  const STOCK = -1;\r\n  const { board, block } = getState();\r\n  const { row, col, direction } = block;\r\n  const underRow = row + 2;\r\n\r\n  // 시작지점까지 블록이 쌓인경우\r\n  if (board[row][col] === STOCK) {\r\n    dispatch(end());\r\n    return;\r\n  }\r\n  // 바닥에 닿으면 isTouch = true\r\n  if (row + 2 === 20) {\r\n    dispatch(setTouch());\r\n    return;\r\n  }\r\n  // 아래 block이 있다면 isTouch = true\r\n  const isTouchBlock = board[underRow]\r\n    .slice(col, col + 2)\r\n    .some((box) => box === STOCK);\r\n  if (isTouchBlock) {\r\n    dispatch(setTouch());\r\n    return;\r\n  }\r\n  // 진행방향으로 블록이 붙어있는경우\r\n  if (direction === \"LEFT\" && col > 0) {\r\n    if (\r\n      board[row][col - 1] ||\r\n      board[row + 1][col - 1] ||\r\n      board[row + 2][col - 1]\r\n    ) {\r\n      dispatch(setDirection(\"DOWN\"));\r\n    }\r\n  } else if (direction === \"RIGHT\" && col < 18) {\r\n    if (\r\n      board[row][col + 2] ||\r\n      board[row + 1][col + 2] ||\r\n      board[row + 2][col + 2]\r\n    ) {\r\n      dispatch(setDirection(\"DOWN\"));\r\n    }\r\n  }\r\n\r\n  // 일반진행\r\n  dispatch(moveBlock({ row, col }));\r\n};\r\nexport const setDirection = createAction(\r\n  SET_DIRECTION,\r\n  (direction) => direction\r\n);\r\n\r\nconst initialState = {\r\n  row: 0, // 0 <= row && row + 1 < 20\r\n  col: 4, // 0 <= col && col + 1 < 10\r\n  isTouched: false,\r\n  direction: null,\r\n};\r\n\r\nconst reducer = handleActions(\r\n  {\r\n    [INIT]: ({ direction }) => ({ ...initialState, direction }),\r\n    [MOVE]: ({ row, col, direction }) => {\r\n      let nextRow = row + 1 === 19 ? row : row + 1;\r\n      let nextCol = col;\r\n      if (direction === \"LEFT\") nextCol = col === 0 ? col : col - 1;\r\n      if (direction === \"RIGHT\") nextCol = col + 1 === 9 ? col : col + 1;\r\n      return {\r\n        row: nextRow,\r\n        col: nextCol,\r\n        isTouched: row + 1 === 19,\r\n        direction,\r\n      };\r\n    },\r\n    [SET_DIRECTION]: (state, { payload: direction }) => ({\r\n      ...state,\r\n      direction,\r\n    }),\r\n    [SET_TOUCH]: (state) => ({\r\n      ...state,\r\n      isTouched: true,\r\n    }),\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default reducer;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport useMousePosition from \"./useMousePosition\";\r\nimport { init, checkCrash, setDirection } from \"../modules/block\";\r\nimport { touchBlock } from \"../modules/board\";\r\n\r\nconst useBlock = () => {\r\n  const dispatch = useDispatch();\r\n  const isTouched = useSelector((_) => _.block.isTouched);\r\n  const row = useSelector((_) => _.block.row);\r\n  const col = useSelector((_) => _.block.col);\r\n  const [mousePos] = useMousePosition();\r\n  useEffect(() => {\r\n    const callback = () => dispatch(checkCrash());\r\n    const interval = setInterval(callback, 300);\r\n    return () => clearInterval(interval);\r\n  }, [dispatch]);\r\n  useEffect(() => {\r\n    if (isTouched) {\r\n      dispatch(init());\r\n      dispatch(touchBlock({ row, col }));\r\n    }\r\n  }, [dispatch, isTouched, row, col]);\r\n  useEffect(() => {\r\n    const blockNode_ = document.getElementById(\"block\");\r\n    const rect = blockNode_.getBoundingClientRect();\r\n    const { left, right } = rect;\r\n    const { x } = mousePos;\r\n    const direction = getDirection({ x, left, right });\r\n    dispatch(setDirection(direction));\r\n  }, [dispatch, row, mousePos]);\r\n  return [{ row, col }];\r\n};\r\n\r\nexport default useBlock;\r\n\r\nfunction getDirection({ x, left, right }) {\r\n  let direction = \"DOWN\";\r\n  if (x < left) {\r\n    direction = \"LEFT\";\r\n  } else if (x > right) {\r\n    direction = \"RIGHT\";\r\n  }\r\n  return direction;\r\n}\r\n","import React from \"react\";\r\nimport useBlock from \"../hooks/useBlock\";\r\n\r\nconst Block = () => {\r\n  const [pos] = useBlock();\r\n  const absolute_position = {\r\n    left: `${pos.col * 34}px`,\r\n    top: `${pos.row * 34}px`,\r\n  };\r\n  return (\r\n    <div id=\"block\" style={absolute_position}>\r\n      <div className=\"block-line\">\r\n        <div className=\"block-line-box\" />\r\n        <div className=\"block-line-box\" />\r\n      </div>\r\n      <div className=\"block-line\">\r\n        <div className=\"block-line-box\" />\r\n        <div className=\"block-line-box\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Block;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Block from \"./Block\";\r\nconst Board = () => {\r\n  const STOCK = -1; // 블록이 닿아서 쌓인 상태\r\n  const isStarted = useSelector((_) => _.game.isStarted);\r\n  const isOver = useSelector((_) => _.game.isOver);\r\n  const board = useSelector((_) => _.board);\r\n  return (\r\n    <div className=\"board\">\r\n      {isOver || (isStarted && <Block />)}\r\n      {board.map((line, rowIndex) => (\r\n        <Line key={`line_${rowIndex}`}>\r\n          {line.map((state, colIndex) => (\r\n            <Box\r\n              key={`box_${rowIndex}_${colIndex}`}\r\n              isStock={state === STOCK}\r\n            />\r\n          ))}\r\n        </Line>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n\r\nconst Line = ({ children }) => <div className=\"board-line\">{children}</div>;\r\nconst Box = ({ isStock }) => (\r\n  <div\r\n    className=\"board-line-box\"\r\n    style={{ backgroundColor: isStock ? \"Sienna\" : \"white\" }}\r\n  />\r\n);\r\n","import { useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { initBoard } from \"../modules/board\";\r\nimport { reset, start } from \"../modules/game\";\r\nconst Control = () => {\r\n  const dispatch = useDispatch();\r\n  const game = useSelector((_) => _.game);\r\n  const onClick = useCallback(() => {\r\n    if (!game.isStarted) dispatch(start());\r\n    if (game.isOver) {\r\n      dispatch(initBoard());\r\n      dispatch(reset());\r\n    }\r\n  }, [dispatch, game]);\r\n  return (\r\n    <div className=\"control\">\r\n      <div className=\"control-info\">\r\n        <div>best: {game.best}</div>\r\n        <div>score: {game.score}</div>\r\n      </div>\r\n      <button className=\"control-button\" onClick={onClick}>\r\n        {game.isOver ? \"다시하기\" : game.isStarted ? \"게임 중...\" : \"시작하기\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Control;\r\n","import \"./App.css\";\nimport Board from \"./components/Board\";\nimport Control from \"./components/Control\";\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"wrap\">\n        <Control />\n        <Board />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\r\nimport block from \"./block\";\r\nimport board from \"./board\";\r\nimport game from \"./game\";\r\n\r\nconst rootReducer = combineReducers({ block, board, game });\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport rootReducer from \"./modules\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}